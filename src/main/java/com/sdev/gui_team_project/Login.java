package com.sdev.gui_team_project;  // Incorporates the Java Package Com.SDEV.GUI_Team_Project to the Program.

import java.sql.Connection;         // Imports the Java.SQL.Connection Class.
import java.sql.DriverManager;      // Imports the Java.SQL.DriverManager Class.
import java.sql.PreparedStatement;  // Imports the Java.SQL.PreparedStatement Class.
import java.sql.ResultSet;          // Imports the Java.SQL.ResultSet Class.
import javax.swing.JOptionPane;     // Imports the JavaX.Swing.JOptionPane Class.
import models.AppModel;             // Imports the Models.AppModel Class.
import models.UserModel;            // Imports the Models.UserModel Class.

public class Login extends javax.swing.JFrame { // Creates a Public Class Called Login Which Extends Onto JavaX.Swing.JFrame.

    public AppModel appState;       // Returns the current app state.
    static Runnable switchFrame;    // Switches to the current frame.

    // Initializes the components of this Login.
    public Login(Runnable switchFrame) {
        Login.switchFrame = switchFrame;
        initComponents();
    }

    // Sets the application state.
    public void setAppState(AppModel appState) {
        this.appState = appState;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        signupButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        comboRole = new javax.swing.JComboBox<>();
        loginButton = new javax.swing.JButton();
        usernameIcon = new javax.swing.JLabel();
        passwordIcon = new javax.swing.JLabel();
        adminIcon = new javax.swing.JLabel();
        exitProgram = new javax.swing.JLabel();
        oldPassword = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setMaximumSize(new java.awt.Dimension(2560, 1440));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 600));

        jPanel2.setBackground(new java.awt.Color(102, 0, 204));
        jPanel2.setMaximumSize(new java.awt.Dimension(500, 600));
        jPanel2.setMinimumSize(new java.awt.Dimension(500, 600));
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 600));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        signupButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        signupButton.setText("Register Page");
        signupButton.setBorder(null);
        signupButton.setBorderPainted(false);
        signupButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        signupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupButtonActionPerformed(evt);
            }
        });
        jPanel2.add(signupButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 520, 160, 40));

        resetButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        resetButton.setText("Reset Password");
        resetButton.setBorder(null);
        resetButton.setBorderPainted(false);
        resetButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jPanel2.add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 520, 160, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sdev/gui_team_project/J&B's Vehicle Rental System.png"))); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 600));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMaximumSize(new java.awt.Dimension(500, 600));
        jPanel3.setMinimumSize(new java.awt.Dimension(500, 600));
        jPanel3.setPreferredSize(new java.awt.Dimension(500, 600));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtUsername.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtUsername.setText("Username");
        txtUsername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsernameFocusGained(evt);
            }
        });
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });
        jPanel3.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 300, 50));

        txtPassword.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txtPassword.setText("Password");
        txtPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
        });
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        jPanel3.add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 300, 50));

        comboRole.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        comboRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Customer" }));
        comboRole.setBorder(null);
        comboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRoleActionPerformed(evt);
            }
        });
        jPanel3.add(comboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 390, 300, 50));

        loginButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        loginButton.setText("Login");
        loginButton.setBorder(null);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        jPanel3.add(loginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 520, 160, 40));
        jPanel3.add(usernameIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, -1, 50));
        jPanel3.add(passwordIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, 23));
        jPanel3.add(adminIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, -1, 53));

        exitProgram.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        exitProgram.setForeground(new java.awt.Color(255, 0, 0));
        exitProgram.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitProgram.setText("X");
        exitProgram.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitProgramMouseClicked(evt);
            }
        });
        jPanel3.add(exitProgram, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 0, 20, 30));

        oldPassword.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        oldPassword.setText("(Current Password)");
        jPanel3.add(oldPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sdev/gui_team_project/Login.png"))); // NOI18N
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 600));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(1000, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Called when the reset button action has been performed and redirects the user to the Reset Password Page.
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {
        ResetPassword rp = null;
        rp = new ResetPassword();
        rp.setVisible(true);
        this.setVisible(false);
    }

    // Called when the sign up button action has been performed and redirects the user to the Register Customer Page.
    private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {
        RegisterCustomer rc = null;
        rc = new RegisterCustomer();
        rc.setVisible(true);
        this.setVisible(false);
    }

    // Called when the comboRole action has been processed.
    private void comboRoleActionPerformed(java.awt.event.ActionEvent evt) {
    }

    /// Called when the login button action has been performed and runs through a series of checks to see if information entered is valid with a series of checks. 
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Connection con = null;          // Creates the object Connection to be renamed as con and it's equal to null.
        PreparedStatement pst = null;   // Creates the object PreparedStatement to be renamed as pst and it's equal to null.
        ResultSet rs = null;            // Creates the object ResultSet to be renamed as rs and it's equal to null.
        PreparedStatement psti = null;  // Creates the object PreparedStatement to be renamed as psti and it's equal to null.
        ResultSet rsi = null;           // Creates the object ResultSet to be renamed as rsi and it's equal to null.
        try {
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");          // Creates a class for the UCanAccess dependency.
            con = DriverManager.getConnection("jdbc:ucanaccess://Rent.accdb");    // Initiliases the variable con to connect to the database file.
            String SQL = "SELECT * FROM Users WHERE Username='" + txtUsername.getText() + "' and Password='"
                    + String.valueOf(txtPassword.getPassword()) + "' and Role='"
                    + comboRole.getSelectedItem().toString() + "' ";    // Creates a new string called SQL which selects all information from the users table where certain objects equal text entered by user input.
            pst = con.prepareStatement(SQL);    // Initiliases the variable pst to prepare a statement from the string SQL.
            rs = pst.executeQuery();            // Initiliases the variable rs to execute a query.
            psti = con.prepareStatement(SQL);   // Initiliases the variable psti to prepare a statement from the string SQL.
            rsi = psti.executeQuery();          // Initiliases the variable rsi to execute a query.
            String role = comboRole.getSelectedItem().toString();   // Returns a string representation of the selected combo item.
            if (rs.next() && role.equals("Admin")) {       // If statement for when the user input is accurate to data in the database and if the role they entered is Admin and also adds up to what is in the database.
                JOptionPane.showMessageDialog(null, "Login Successful, Re-Directing to the Admin Main Menu!");  // Displays a dialog stating a redirection will be made to the main menu.
                MainMenuAdmin mma = new MainMenuAdmin();    // Goes to the Admin main menu.
                mma.setVisible(true);                   // Creates the next window (MainMenuAdmin.java) to visible.
                this.setVisible(false);                 // Creates the current window (Login.java) to invisible.
            } else if (rsi.next() && role.equals("Customer")) {     // If statement for when the user input is accurate to data in the database and if the role they entered is Customer and also adds up to what is in the database.
                int userId = rsi.getInt("ID");                  // Creates an int called userId which is equal to ID in the database.
                String username = rsi.getString("Username");    // Creates a String called username which is equal to Username in the database.
                String firstname = rsi.getString("FirstName");  // Creates a String called firstname which is equal to FirstName in the database.
                String lastname = rsi.getString("LastName");    // Creates a String called lastname which is equal to LastName in the database.
                String gender = rsi.getString("Gender");        // Creates a String called gender which is equal to Gender in the database.
                String roleName = rsi.getString("Role");        // Creates a String called roleName which is equal to Role in the database.
                int rentId = rsi.getInt("RentID");              // Creates an int called rentId which is equal to RoleID in the database.

                // Sets the current user.
                appState.setCurrentUser(new UserModel(userId, username, firstname, lastname, gender, roleName, rentId));

                // Shows a dialog to login Successfully Re - Directioning to the Customer Main Menu
                JOptionPane.showMessageDialog(null, "Login Successful, Re-Directing to the Customer Main Menu!");   // User Input was Customer so redirects the user to the Customer main menu.
                MainMenuCustomer mmc = new MainMenuCustomer(switchFrame);   // Switches to the Customer's main menu.
                mmc.setVisible(true);   // Creates the next window (MainMenuAdmin.java) to visible.
                this.setVisible(false); // Creates the current window (Login.java) to invisible.
            } else {
                JOptionPane.showMessageDialog(null, "Login Failed, Please Try Again!"); // If user input is incorrect it'll show that the login failed.
            }
        // Prints the exception to stdout to use in the try catch statement.
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Exits the program when the user clicks the mouse button on the X symbol in the top right of the window.
    private void exitProgramMouseClicked(java.awt.event.MouseEvent evt) {
        System.exit(0);
    }

    // This method is called when the txt password action has been processed.
    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {
    }

    // When focus is gained on the password form, the original "Password" text is deleted to allow for user input.
    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {
        txtPassword.setText("");
    }

    // txtUsernameActionPerformed event.
    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {
    }

        // When focus is gained on the username form, the original "Username" text is deleted to allow for user input.
    private void txtUsernameFocusGained(java.awt.event.FocusEvent evt) {
        txtUsername.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login(switchFrame).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adminIcon;
    private javax.swing.JComboBox<String> comboRole;
    private javax.swing.JLabel exitProgram;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel oldPassword;
    private javax.swing.JLabel passwordIcon;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton signupButton;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JLabel usernameIcon;
    // End of variables declaration//GEN-END:variables
}
